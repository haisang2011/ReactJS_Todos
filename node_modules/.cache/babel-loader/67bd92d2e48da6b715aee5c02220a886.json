{"ast":null,"code":"var arrayUniq = require('array-uniq');\n\nfunction Charset() {\n  this.chars = '';\n}\n\nCharset.prototype.setType = function (type) {\n  var chars;\n  var numbers = '0123456789';\n  var charsLower = 'abcdefghijklmnopqrstuvwxyz';\n  var charsUpper = charsLower.toUpperCase();\n  var hexChars = 'abcdef';\n\n  if (type === 'alphanumeric') {\n    chars = numbers + charsLower + charsUpper;\n  } else if (type === 'numeric') {\n    chars = numbers;\n  } else if (type === 'alphabetic') {\n    chars = charsLower + charsUpper;\n  } else if (type === 'hex') {\n    chars = numbers + hexChars;\n  } else {\n    chars = type;\n  }\n\n  this.chars = chars;\n};\n\nCharset.prototype.removeUnreadable = function () {\n  var unreadableChars = /[0OIl]/g;\n  this.chars = this.chars.replace(unreadableChars, '');\n};\n\nCharset.prototype.setcapitalization = function (capitalization) {\n  if (capitalization === 'uppercase') {\n    this.chars = this.chars.toUpperCase();\n  } else if (capitalization === 'lowercase') {\n    this.chars = this.chars.toLowerCase();\n  }\n};\n\nCharset.prototype.removeDuplicates = function () {\n  var charMap = this.chars.split('');\n  charMap = arrayUniq(charMap);\n  this.chars = charMap.join('');\n};\n\nmodule.exports = exports = Charset;","map":{"version":3,"sources":["D:/Tài Liệu Học Tập/Lập Trình Web/Generator_ReactJS/Project_ReactJS/node_modules/randomstring/lib/charset.js"],"names":["arrayUniq","require","Charset","chars","prototype","setType","type","numbers","charsLower","charsUpper","toUpperCase","hexChars","removeUnreadable","unreadableChars","replace","setcapitalization","capitalization","toLowerCase","removeDuplicates","charMap","split","join","module","exports"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAvB;;AAEA,SAASC,OAAT,GAAmB;AACjB,OAAKC,KAAL,GAAa,EAAb;AACD;;AAEDD,OAAO,CAACE,SAAR,CAAkBC,OAAlB,GAA4B,UAASC,IAAT,EAAe;AACzC,MAAIH,KAAJ;AAEA,MAAII,OAAO,GAAM,YAAjB;AACA,MAAIC,UAAU,GAAG,4BAAjB;AACA,MAAIC,UAAU,GAAGD,UAAU,CAACE,WAAX,EAAjB;AACA,MAAIC,QAAQ,GAAK,QAAjB;;AAEA,MAAIL,IAAI,KAAK,cAAb,EAA6B;AAC3BH,IAAAA,KAAK,GAAGI,OAAO,GAAGC,UAAV,GAAuBC,UAA/B;AACD,GAFD,MAGK,IAAIH,IAAI,KAAK,SAAb,EAAwB;AAC3BH,IAAAA,KAAK,GAAGI,OAAR;AACD,GAFI,MAGA,IAAID,IAAI,KAAK,YAAb,EAA2B;AAC9BH,IAAAA,KAAK,GAAGK,UAAU,GAAGC,UAArB;AACD,GAFI,MAGA,IAAIH,IAAI,KAAK,KAAb,EAAoB;AACvBH,IAAAA,KAAK,GAAGI,OAAO,GAAGI,QAAlB;AACD,GAFI,MAGA;AACHR,IAAAA,KAAK,GAAGG,IAAR;AACD;;AAED,OAAKH,KAAL,GAAaA,KAAb;AACD,CAzBD;;AA2BAD,OAAO,CAACE,SAAR,CAAkBQ,gBAAlB,GAAqC,YAAW;AAC9C,MAAIC,eAAe,GAAG,SAAtB;AACA,OAAKV,KAAL,GAAa,KAAKA,KAAL,CAAWW,OAAX,CAAmBD,eAAnB,EAAoC,EAApC,CAAb;AACD,CAHD;;AAKAX,OAAO,CAACE,SAAR,CAAkBW,iBAAlB,GAAsC,UAASC,cAAT,EAAyB;AAC7D,MAAIA,cAAc,KAAK,WAAvB,EAAoC;AAClC,SAAKb,KAAL,GAAa,KAAKA,KAAL,CAAWO,WAAX,EAAb;AACD,GAFD,MAGK,IAAIM,cAAc,KAAK,WAAvB,EAAoC;AACvC,SAAKb,KAAL,GAAa,KAAKA,KAAL,CAAWc,WAAX,EAAb;AACD;AACF,CAPD;;AASAf,OAAO,CAACE,SAAR,CAAkBc,gBAAlB,GAAqC,YAAW;AAC9C,MAAIC,OAAO,GAAG,KAAKhB,KAAL,CAAWiB,KAAX,CAAiB,EAAjB,CAAd;AACAD,EAAAA,OAAO,GAAGnB,SAAS,CAACmB,OAAD,CAAnB;AACA,OAAKhB,KAAL,GAAagB,OAAO,CAACE,IAAR,CAAa,EAAb,CAAb;AACD,CAJD;;AAMAC,MAAM,CAACC,OAAP,GAAiBA,OAAO,GAAGrB,OAA3B","sourcesContent":["var arrayUniq = require('array-uniq');\n\nfunction Charset() {\n  this.chars = '';\n}\n\nCharset.prototype.setType = function(type) {\n  var chars;\n  \n  var numbers    = '0123456789';\n  var charsLower = 'abcdefghijklmnopqrstuvwxyz';\n  var charsUpper = charsLower.toUpperCase();\n  var hexChars   = 'abcdef';\n  \n  if (type === 'alphanumeric') {\n    chars = numbers + charsLower + charsUpper;\n  }\n  else if (type === 'numeric') {\n    chars = numbers;\n  }\n  else if (type === 'alphabetic') {\n    chars = charsLower + charsUpper;\n  }\n  else if (type === 'hex') {\n    chars = numbers + hexChars;\n  }\n  else {\n    chars = type;\n  }\n  \n  this.chars = chars;\n}\n\nCharset.prototype.removeUnreadable = function() {\n  var unreadableChars = /[0OIl]/g;\n  this.chars = this.chars.replace(unreadableChars, '');\n}\n\nCharset.prototype.setcapitalization = function(capitalization) {\n  if (capitalization === 'uppercase') {\n    this.chars = this.chars.toUpperCase();\n  }\n  else if (capitalization === 'lowercase') {\n    this.chars = this.chars.toLowerCase();\n  }\n}\n\nCharset.prototype.removeDuplicates = function() {\n  var charMap = this.chars.split('');\n  charMap = arrayUniq(charMap);\n  this.chars = charMap.join('');\n}\n\nmodule.exports = exports = Charset;"]},"metadata":{},"sourceType":"script"}